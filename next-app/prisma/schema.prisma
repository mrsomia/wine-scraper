// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id     String        @id @default(cuid())
  name   String
  urls   Urls          @relation(fields: [urlsId], references: [id])
  urlsId String        @unique
  prices PriceRecord[]
  Users  ItemToUsers[]
}

model Urls {
  id        String  @id @default(cuid())
  tesco     String?
  dunnes    String?
  supervalu String?
  Item      Item?
}

model PriceRecord {
  id        String   @id @default(cuid())
  dateTime  DateTime
  tesco     Float?
  dunnes    Float?
  supervalu Float?
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  favItems      ItemToUsers[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ItemToUsers {
  item       Item     @relation(fields: [itemId], references: [id])
  itemId     String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  assignedAt DateTime @default(now())

  @@id([itemId, userId])
}
